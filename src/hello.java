
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Michael
 */
public class hello extends javax.swing.JFrame {

    int Points, p1Points, p2Points, gameStat, turn;
    String address = "jdbc:mysql://localhost:3306/bis_db ?useTimezone=true&serverTimezone=UTC", ID = "root", Pass = "MySQLPassword01";

    /**
     * Creates new form TicTacToe
     */
    public hello() {
        initComponents();
        setLocationRelativeTo(null);
        startsbg();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        choosePoints = new javax.swing.JFrame();
        mainpanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        m1 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        b1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        t1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        t2 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        b2 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        m2 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        t3 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        b3 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        m3 = new javax.swing.JLabel();
        p1label1 = new javax.swing.JLabel();
        p1label = new javax.swing.JLabel();
        p1lb = new javax.swing.JLabel();
        p2lb = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        p2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        p1 = new javax.swing.JLabel();
        exbut = new javax.swing.JButton();
        timerBar = new javax.swing.JProgressBar();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pointsPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        again = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        bordered = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        choosePoints.setMinimumSize(new java.awt.Dimension(1196, 608));
        choosePoints.setUndecorated(true);
        choosePoints.setResizable(false);
        choosePoints.getContentPane().setLayout(null);

        mainpanel.setBackground(new java.awt.Color(255, 255, 255));
        mainpanel.setLayout(null);

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));
        jPanel4.setPreferredSize(new java.awt.Dimension(600, 600));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        m1.setFont(new java.awt.Font("Lemon", 0, 200)); // NOI18N
        m1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        m1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        m1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m1MouseClicked(evt);
            }
        });
        jPanel9.add(m1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 200));

        jPanel4.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 200, 200));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        b1.setFont(new java.awt.Font("Lemon", 0, 200)); // NOI18N
        b1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b1MouseClicked(evt);
            }
        });
        jPanel10.add(b1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 200));

        jPanel4.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, 200, 200));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        t1.setFont(new java.awt.Font("Lemon", 0, 200)); // NOI18N
        t1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t1MouseClicked(evt);
            }
        });
        jPanel5.add(t1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 6, 200, 190));

        jPanel4.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 200));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        t2.setFont(new java.awt.Font("Lemon", 0, 200)); // NOI18N
        t2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t2MouseClicked(evt);
            }
        });
        jPanel7.add(t2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 200));

        jPanel4.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 200, 200));

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        b2.setFont(new java.awt.Font("Lemon", 0, 200)); // NOI18N
        b2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b2MouseClicked(evt);
            }
        });
        jPanel12.add(b2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 200));

        jPanel4.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 400, 200, 200));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        m2.setFont(new java.awt.Font("Lemon", 0, 200)); // NOI18N
        m2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        m2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        m2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m2MouseClicked(evt);
            }
        });
        jPanel11.add(m2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 200));

        jPanel4.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 200, 200));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        t3.setFont(new java.awt.Font("Lemon", 0, 200)); // NOI18N
        t3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t3MouseClicked(evt);
            }
        });
        jPanel8.add(t3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 200));

        jPanel4.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, 200, 200));

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        b3.setFont(new java.awt.Font("Lemon", 0, 200)); // NOI18N
        b3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b3MouseClicked(evt);
            }
        });
        jPanel14.add(b3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 200));

        jPanel4.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 400, 200, 200));

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        m3.setFont(new java.awt.Font("Lemon", 0, 200)); // NOI18N
        m3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        m3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        m3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m3MouseClicked(evt);
            }
        });
        jPanel13.add(m3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 200));

        jPanel4.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 200, 200, 200));

        mainpanel.add(jPanel4);
        jPanel4.setBounds(290, 0, 600, 600);

        p1label1.setBackground(new java.awt.Color(0, 0, 0));
        p1label1.setFont(new java.awt.Font("Orbitron", 1, 50)); // NOI18N
        p1label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p1label1.setText("O");
        mainpanel.add(p1label1);
        p1label1.setBounds(890, 10, 290, 60);

        p1label.setBackground(new java.awt.Color(0, 0, 0));
        p1label.setFont(new java.awt.Font("Orbitron", 1, 50)); // NOI18N
        p1label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p1label.setText("X");
        mainpanel.add(p1label);
        p1label.setBounds(0, 10, 290, 60);

        p1lb.setBackground(new java.awt.Color(0, 0, 0));
        p1lb.setFont(new java.awt.Font("Orbitron", 1, 40)); // NOI18N
        p1lb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p1lb.setText("PLayer One");
        mainpanel.add(p1lb);
        p1lb.setBounds(0, 80, 290, 50);

        p2lb.setBackground(new java.awt.Color(0, 0, 0));
        p2lb.setFont(new java.awt.Font("Orbitron", 1, 40)); // NOI18N
        p2lb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p2lb.setText("Player Two");
        mainpanel.add(p2lb);
        p2lb.setBounds(890, 80, 310, 50);

        jLabel8.setFont(new java.awt.Font("Orbitron", 1, 36)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Point");
        mainpanel.add(jLabel8);
        jLabel8.setBounds(0, 160, 290, 47);

        p2.setFont(new java.awt.Font("Orbitron", 1, 150)); // NOI18N
        p2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainpanel.add(p2);
        p2.setBounds(900, 180, 290, 260);

        jLabel9.setFont(new java.awt.Font("Orbitron", 1, 36)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Point");
        mainpanel.add(jLabel9);
        jLabel9.setBounds(890, 137, 310, 80);

        p1.setFont(new java.awt.Font("Orbitron", 1, 150)); // NOI18N
        p1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainpanel.add(p1);
        p1.setBounds(0, 180, 290, 260);

        exbut.setBackground(new java.awt.Color(51, 51, 255));
        exbut.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        exbut.setForeground(new java.awt.Color(255, 255, 255));
        exbut.setText("EXIT GAME");
        exbut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exbut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exbutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exbutMouseExited(evt);
            }
        });
        exbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exbutActionPerformed(evt);
            }
        });
        mainpanel.add(exbut);
        exbut.setBounds(930, 550, 260, 50);
        mainpanel.add(timerBar);
        timerBar.setBounds(290, 600, 600, 20);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Timer");
        mainpanel.add(jLabel6);
        jLabel6.setBounds(290, 620, 600, 17);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/329997.jpg"))); // NOI18N
        mainpanel.add(jLabel7);
        jLabel7.setBounds(1, -4, 1200, 640);

        choosePoints.getContentPane().add(mainpanel);
        mainpanel.setBounds(0, 0, 0, 630);

        pointsPanel.setBackground(new java.awt.Color(255, 255, 255));
        pointsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("ROG Fonts", 0, 170)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("10");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255), 8));
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        pointsPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 210, 270, 240));

        jLabel3.setFont(new java.awt.Font("ROG Fonts", 0, 150)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("20");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255), 8));
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        pointsPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 210, 280, 240));

        jLabel4.setFont(new java.awt.Font("ROG Fonts", 0, 170)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("5");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255), 8));
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        pointsPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 250, 240));

        jLabel11.setFont(new java.awt.Font("Orbitron", 1, 60)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("HOW MANY POINTS?");
        pointsPanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 6, 1200, 140));

        choosePoints.getContentPane().add(pointsPanel);
        pointsPanel.setBounds(0, 0, 1196, 600);

        again.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        again.setMinimumSize(new java.awt.Dimension(430, 212));
        again.setUndecorated(true);
        again.setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Orbitron", 1, 50)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Again?");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(0, 30, 430, 64);

        jButton1.setBackground(new java.awt.Color(51, 51, 255));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("No");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(290, 100, 110, 50);

        jButton2.setBackground(new java.awt.Color(51, 51, 255));
        jButton2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Yes");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);
        jButton2.setBounds(30, 100, 110, 50);

        again.getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        bordered.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        bordered.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255), 5));
        jPanel1.add(bordered);
        bordered.setBounds(310, 440, 610, 110);

        jLabel1.setFont(new java.awt.Font("Orbitron", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Press Enter to Start");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(310, 380, 610, 240);

        jLabel10.setFont(new java.awt.Font("Orbitron", 1, 150)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("TIC-TAC-TOE");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(0, 70, 1200, 180);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 570));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setVisible(false);
            choosePoints.setVisible(true);
            choosePoints.setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_formKeyPressed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        Points = 5;
        pointsPanel.setSize(0, 569);
        mainpanel.setSize(1196, 608);
        timer();
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        timer();
        Points = 10;
        pointsPanel.setSize(0, 569);
        mainpanel.setSize(1196, 608);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        timer();
        Points = 20;
        pointsPanel.setSize(0, 569);
        mainpanel.setSize(1196, 608);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void t1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t1MouseClicked
        timerBar.setValue(0);
        timer();
        if ("".equals(t1.getText())) {
            gameStat = gameStat + 1;
            if (turn == 0) {
                turn = 1;
                t1.setText("X");
                check();
            } else {
                turn = 0;
                t1.setText("O");
                check();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Space is already occupied!!!", "CHOOSE ANOTHER ONE BITCH!", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_t1MouseClicked

    private void t2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t2MouseClicked
        timerBar.setValue(0);
        timer();
        if ("".equals(t2.getText())) {
            gameStat = gameStat + 1;
            if (turn == 0) {
                turn = 1;
                t2.setText("X");
                check();
            } else {
                turn = 0;
                t2.setText("O");
                check();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Space is already occupied!!!", "CHOOSE ANOTHER ONE BITCH!", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_t2MouseClicked

    private void t3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t3MouseClicked
        timerBar.setValue(0);
        timer();
        if ("".equals(t3.getText())) {
            gameStat = gameStat + 1;
            if (turn == 0) {
                turn = 1;
                t3.setText("X");
                check();
            } else {
                turn = 0;
                t3.setText("O");
                check();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Space is already occupied!!!", "CHOOSE ANOTHER ONE BITCH!", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_t3MouseClicked

    private void m1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m1MouseClicked
        timerBar.setValue(0);
        timer();
        if ("".equals(m1.getText())) {
            gameStat = gameStat + 1;
            if (turn == 0) {
                turn = 1;
                m1.setText("X");
                check();
            } else {
                turn = 0;
                m1.setText("O");
                check();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Space is already occupied!!!", "CHOOSE ANOTHER ONE BITCH!", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_m1MouseClicked

    private void m2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m2MouseClicked
        timerBar.setValue(0);
        timer();
        if ("".equals(m2.getText())) {
            gameStat = gameStat + 1;
            if (turn == 0) {
                turn = 1;
                m2.setText("X");
                check();
            } else {
                turn = 0;
                m2.setText("O");
                check();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Space is already occupied!!!", "CHOOSE ANOTHER ONE BITCH!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_m2MouseClicked

    private void m3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m3MouseClicked
        timerBar.setValue(0);
        timer();
        if ("".equals(m3.getText())) {
            gameStat = gameStat + 1;
            if (turn == 0) {
                turn = 1;
                m3.setText("X");
                check();
            } else {
                turn = 0;
                m3.setText("O");
                check();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Space is already occupied!!!", "CHOOSE ANOTHER ONE BITCH!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_m3MouseClicked

    private void b1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b1MouseClicked
        timerBar.setValue(0);
        timer();
        if ("".equals(b1.getText())) {
            gameStat = gameStat + 1;
            if (turn == 0) {
                turn = 1;
                b1.setText("X");
                check();
            } else {
                turn = 0;
                b1.setText("O");
                check();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Space is already occupied!!!", "CHOOSE ANOTHER ONE BITCH!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_b1MouseClicked

    private void b2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b2MouseClicked
        timerBar.setValue(0);
        timer();
        if ("".equals(b2.getText())) {
            gameStat = gameStat + 1;
            if (turn == 0) {
                turn = 1;
                b2.setText("X");
                check();
            } else {
                turn = 0;
                b2.setText("O");
                check();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Space is already occupied!!!", "CHOOSE ANOTHER ONE BITCH!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_b2MouseClicked

    private void b3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b3MouseClicked
        timerBar.setValue(0);
        timer();
        if ("".equals(b3.getText())) {
            gameStat = gameStat + 1;
            if (turn == 0) {
                turn = 1;
                b3.setText("X");
                check();
            } else {
                turn = 0;
                b3.setText("O");
                check();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Space is already occupied!!!", "CHOOSE ANOTHER ONE BITCH!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_b3MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        resetgame();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
        jButton2.setBackground(Color.LIGHT_GRAY);
        jButton2.setForeground(new Color(51, 51, 255));


    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseExited
        jButton2.setBackground(new Color(51, 51, 255));
        jButton2.setForeground(Color.WHITE);


    }//GEN-LAST:event_jButton2MouseExited

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        jButton1.setBackground(Color.LIGHT_GRAY);
        jButton1.setForeground(new Color(51, 51, 255));


    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        jButton1.setBackground(new Color(51, 51, 255));
        jButton1.setForeground(Color.WHITE);

    }//GEN-LAST:event_jButton1MouseExited

    private void exbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exbutActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_exbutActionPerformed

    private void exbutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exbutMouseEntered
        exbut.setBackground(Color.white);
        exbut.setForeground(new Color(51, 51, 255));
    }//GEN-LAST:event_exbutMouseEntered

    private void exbutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exbutMouseExited
        exbut.setForeground(Color.white);
        exbut.setBackground(new Color(51, 51, 255));
    }//GEN-LAST:event_exbutMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hello.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hello.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hello.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hello.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hello().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog again;
    private javax.swing.JLabel b1;
    private javax.swing.JLabel b2;
    private javax.swing.JLabel b3;
    private javax.swing.JLabel bordered;
    private javax.swing.JFrame choosePoints;
    private javax.swing.JButton exbut;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel m1;
    private javax.swing.JLabel m2;
    private javax.swing.JLabel m3;
    private javax.swing.JPanel mainpanel;
    private javax.swing.JLabel p1;
    private javax.swing.JLabel p1label;
    private javax.swing.JLabel p1label1;
    private javax.swing.JLabel p1lb;
    private javax.swing.JLabel p2;
    private javax.swing.JLabel p2lb;
    private javax.swing.JPanel pointsPanel;
    private javax.swing.JLabel t1;
    private javax.swing.JLabel t2;
    private javax.swing.JLabel t3;
    private javax.swing.JProgressBar timerBar;
    // End of variables declaration//GEN-END:variables
private void check() {
        if (!(p1Points == Points || p2Points == Points)) {
            //String t1b,t2b,t3b,m1b,m2b,m3b,b1b,b2b,b3b; 
            String p1x, p2x, p3x, p4x, p5x, p6x, p7x, p8x, p1o, p2o, p3o, p4o, p5o, p6o, p7o, p8o, draw;
            //pattern 1x
            p1x = t1.getText() + "" + t2.getText() + "" + t3.getText();
            if ("XXX".equals(p1x)) {

                p1Points = p1Points + 1;
                p1.setText(p1Points + "");
                resetround();

            }
            //pattern 2x
            p2x = m1.getText() + "" + m2.getText() + "" + m3.getText();
            if ("XXX".equals(p2x)) {

                p1Points = p1Points + 1;
                p1.setText(p1Points + "");
                resetround();

            }
            //pattern 3x
            p3x = b1.getText() + "" + b2.getText() + "" + b3.getText();
            if ("XXX".equals(p3x)) {

                p1Points = p1Points + 1;
                p1.setText(p1Points + "");
                resetround();

            }
            //pattern 4x
            p4x = t1.getText() + "" + m2.getText() + "" + b3.getText();
            if ("XXX".equals(p4x)) {

                p1Points = p1Points + 1;
                p1.setText(p1Points + "");
                resetround();

            }
            //pattern 5x
            p5x = t1.getText() + "" + m1.getText() + "" + b1.getText();
            if ("XXX".equals(p5x)) {

                p1Points = p1Points + 1;
                p1.setText(p1Points + "");
                resetround();

            }
            //pattern 6x
            p6x = t2.getText() + "" + m2.getText() + "" + b2.getText();
            if ("XXX".equals(p6x)) {

                p1Points = p1Points + 1;
                p1.setText(p1Points + "");
                resetround();

            }
            //pattern 7x
            p7x = t3.getText() + "" + m3.getText() + "" + b3.getText();
            if ("XXX".equals(p7x)) {

                p1Points = p1Points + 1;
                p1.setText(p1Points + "");
                resetround();

            }
            //pattern 8x
            p8x = t3.getText() + "" + m2.getText() + "" + b1.getText();
            if ("XXX".equals(p8x)) {

                p1Points = p1Points + 1;
                p1.setText(p1Points + "");
                resetround();

            }

            //pattern p1o
            p1o = t1.getText() + "" + t2.getText() + "" + t3.getText();
            if ("OOO".equals(p1o)) {

                p2Points = p2Points + 1;
                p2.setText(p2Points + "");
                resetround();

            }
            //pattern 2o
            p2o = m1.getText() + "" + m2.getText() + "" + m3.getText();
            if ("OOO".equals(p2o)) {

                p2Points = p2Points + 1;
                p2.setText(p2Points + "");
                resetround();

            }
            //pattern 3o
            p3o = b1.getText() + "" + b2.getText() + "" + b3.getText();
            if ("OOO".equals(p3o)) {

                p2Points = p2Points + 1;
                p2.setText(p2Points + "");
                resetround();

            }
            //pattern 4o
            p4o = t1.getText() + "" + m2.getText() + "" + b3.getText();
            if ("OOO".equals(p4o)) {

                p2Points = p2Points + 1;
                p2.setText(p2Points + "");
                resetround();

            }
            //pattern 5o
            p5o = t1.getText() + "" + m1.getText() + "" + b1.getText();
            if ("OOO".equals(p5o)) {

                p2Points = p2Points + 1;
                p2.setText(p2Points + "");
                resetround();

            }
            //pattern 6o
            p6o = t2.getText() + "" + m2.getText() + "" + b2.getText();
            if ("OOO".equals(p6o)) {

                p2Points = p2Points + 1;
                p2.setText(p2Points + "");
                resetround();

            }
            //pattern 7o
            p7o = t3.getText() + "" + m3.getText() + "" + b3.getText();
            if ("OOO".equals(p7o)) {

                p2Points = p2Points + 1;
                p2.setText(p2Points + "");
                resetround();

            }
            //pattern 8o
            p8o = t3.getText() + "" + m2.getText() + "" + b1.getText();
            if ("OOO".equals(p8o)) {
                p2Points = p2Points + 1;
                p2.setText(p2Points + "");
                resetround();

            }
            if (gameStat == 9) {
                JOptionPane.showMessageDialog(null, "DRAW!");
                resetround();
            }
        } else {
            if (p1Points == Points) {
                JOptionPane.showMessageDialog(null, "PLAYER ONE WINS!");
                again.setVisible(true);
                again.setLocationRelativeTo(null);
            } else if (p2Points == Points) {
                JOptionPane.showMessageDialog(null, "PLAYER TWO WINS!");
                again.setVisible(true);
                again.setLocationRelativeTo(null);
            }
        }
    }

    private void resetround() {
        t1.setText("");
        t2.setText("");
        t3.setText("");
        m1.setText("");
        m2.setText("");
        m3.setText("");
        b1.setText("");
        b2.setText("");
        b3.setText("");
        gameStat = 0;
        check();
    }

    private void resetgame() {
        t1.setText("");
        t2.setText("");
        t3.setText("");
        m1.setText("");
        m2.setText("");
        m3.setText("");
        b1.setText("");
        b2.setText("");
        b3.setText("");
        Points = 0;
        p1Points = 0;
        p2Points = 0;
        p1.setText("");
        p2.setText("");
        turn = 0;
        mainpanel.setSize(0, 569);
        pointsPanel.setSize(1196, 608);
        again.setVisible(false);
    }

    public void SQ1() {
        Thread seq1 = new Thread() {
            public void run() {
                for (int up = 0; up <= 255; up++) {
                    t1.setForeground(new Color(up, 255, 0));
                    t2.setForeground(new Color(up, 255, 0));
                    t3.setForeground(new Color(up, 255, 0));
                    m1.setForeground(new Color(up, 255, 0));
                    m2.setForeground(new Color(up, 255, 0));
                    m3.setForeground(new Color(up, 255, 0));
                    b1.setForeground(new Color(up, 255, 0));
                    b2.setForeground(new Color(up, 255, 0));
                    b3.setForeground(new Color(up, 255, 0));
                    if (turn == 0) {
                        p2lb.setForeground(Color.BLACK);
                        p1lb.setForeground(new Color(up, 255, 0));
                    } else {
                        p1lb.setForeground(Color.BLACK);
                        p2lb.setForeground(new Color(up, 255, 0));
                    }
                    try {
                        sleep(5);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(hello.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };
        seq1.start();
    }

    public void SQ2() {
        Thread seq2 = new Thread() {
            public void run() {
                for (int down = 255; down >= 0; down--) {
                    t1.setForeground(new Color(255, down, 0));
                    t2.setForeground(new Color(255, down, 0));
                    t3.setForeground(new Color(255, down, 0));
                    m1.setForeground(new Color(255, down, 0));
                    m2.setForeground(new Color(255, down, 0));
                    m3.setForeground(new Color(255, down, 0));
                    b1.setForeground(new Color(255, down, 0));
                    b2.setForeground(new Color(255, down, 0));
                    b3.setForeground(new Color(255, down, 0));
                    if (turn == 0) {
                        p2lb.setForeground(Color.BLACK);
                        p1lb.setForeground(new Color(255, down, 0));
                    } else {
                        p1lb.setForeground(Color.BLACK);
                        p2lb.setForeground(new Color(255, down, 0));
                    }
                    try {
                        sleep(5);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(hello.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };
        seq2.start();
    }

    public void SQ3() {
        Thread seq3 = new Thread() {
            public void run() {
                for (int up = 0; up <= 255; up++) {
                    t1.setForeground(new Color(255, 0, up));
                    t2.setForeground(new Color(255, 0, up));
                    t3.setForeground(new Color(255, 0, up));
                    m1.setForeground(new Color(255, 0, up));
                    m2.setForeground(new Color(255, 0, up));
                    m3.setForeground(new Color(255, 0, up));
                    b1.setForeground(new Color(255, 0, up));
                    b2.setForeground(new Color(255, 0, up));
                    b3.setForeground(new Color(255, 0, up));
                    if (turn == 0) {
                        p2lb.setForeground(Color.BLACK);
                        p1lb.setForeground(new Color(255, 0, up));
                    } else {
                        p1lb.setForeground(Color.BLACK);
                        p2lb.setForeground(new Color(255, 0, up));
                    }
                    try {
                        sleep(5);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(hello.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };
        seq3.start();
    }

    public void SQ4() {
        Thread seq4 = new Thread() {
            public void run() {
                for (int down = 255; down >= 0; down--) {
                    t1.setForeground(new Color(down, 0, 255));
                    t2.setForeground(new Color(down, 0, 255));
                    t3.setForeground(new Color(down, 0, 255));
                    m1.setForeground(new Color(down, 0, 255));
                    m2.setForeground(new Color(down, 0, 255));
                    m3.setForeground(new Color(down, 0, 255));
                    b1.setForeground(new Color(down, 0, 255));
                    b2.setForeground(new Color(down, 0, 255));
                    b3.setForeground(new Color(down, 0, 255));
                    if (turn == 0) {
                        p2lb.setForeground(Color.BLACK);
                        p1lb.setForeground(new Color(down, 0, 255));
                    } else {
                        p1lb.setForeground(Color.BLACK);
                        p2lb.setForeground(new Color(down, 0, 255));
                    }
                    try {
                        sleep(5);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(hello.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };
        seq4.start();
    }

    public void SQ5() {
        Thread seq5 = new Thread() {
            public void run() {
                for (int up = 0; up <= 255; up++) {
                    t1.setForeground(new Color(0, up, 255));
                    t2.setForeground(new Color(0, up, 255));
                    t3.setForeground(new Color(0, up, 255));
                    m1.setForeground(new Color(0, up, 255));
                    m2.setForeground(new Color(0, up, 255));
                    m3.setForeground(new Color(0, up, 255));
                    b1.setForeground(new Color(0, up, 255));
                    b2.setForeground(new Color(0, up, 255));
                    b3.setForeground(new Color(0, up, 255));
                    if (turn == 0) {
                        p2lb.setForeground(Color.BLACK);
                        p1lb.setForeground(new Color(0, up, 255));
                    } else {
                        p1lb.setForeground(Color.BLACK);
                        p2lb.setForeground(new Color(0, up, 255));
                    }
                    try {
                        sleep(5);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(hello.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };
        seq5.start();
    }

    public void SQ6() {
        Thread seq6 = new Thread() {
            public void run() {
                for (int down = 255; down >= 0; down--) {
                    t1.setForeground(new Color(0, 255, down));
                    t2.setForeground(new Color(0, 255, down));
                    t3.setForeground(new Color(0, 255, down));
                    m1.setForeground(new Color(0, 255, down));
                    m2.setForeground(new Color(0, 255, down));
                    m3.setForeground(new Color(0, 255, down));
                    b1.setForeground(new Color(0, 255, down));
                    b2.setForeground(new Color(0, 255, down));
                    b3.setForeground(new Color(0, 255, down));
                    if (turn == 0) {
                        p2lb.setForeground(Color.BLACK);
                        p1lb.setForeground(new Color(0, 255, down));
                    } else {
                        p1lb.setForeground(Color.BLACK);
                        p2lb.setForeground(new Color(0, 255, down));

                    }
                    try {
                        sleep(5);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(hello.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };
        seq6.start();
    }

    public void startsbg() {
        SQ1();
        Timer timerSQ1 = new Timer(2000, (ActionEvent e) -> {
            SQ2();
            Timer timerSQ2 = new Timer(2000, (ActionEvent e1) -> {
                SQ3();
                Timer timerSQ3 = new Timer(2000, (ActionEvent e2) -> {
                    SQ4();
                    Timer timeSQ4 = new Timer(2000, (ActionEvent e3) -> {
                        SQ5();
                        Timer timeSQ5 = new Timer(2000, (ActionEvent e5) -> {
                            SQ6();
                            Timer timeSQ6 = new Timer(2000, (ActionEvent e6) -> {
                                startsbg();
                            });
                            timeSQ6.start();
                            timeSQ6.setRepeats(false);
                        });
                        timeSQ5.start();
                        timeSQ5.setRepeats(false);
                    });
                    timeSQ4.start();
                    timeSQ4.setRepeats(false);
                });
                timerSQ3.start();
                timerSQ3.setRepeats(false);
            });
            timerSQ2.start();
            timerSQ2.setRepeats(false);

        });
        timerSQ1.start();
        timerSQ1.setRepeats(false);
    }

    public void checkDb() {
        try {
            Connection con = (Connection) DriverManager.getConnection(address, ID, Pass);
            PreparedStatement ps = con.prepareStatement("SELECT * FROM ");

        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }

    public void timer() {
        Thread tr = new Thread() {
            public void run() {
                for (;;) {
                    timerBar.setValue(timerBar.getValue() + 10);

                    try {
                        if (timerBar.getValue() == 100) {
                            interrupt();
                            timerBar.setValue(0);
                            JOptionPane.showMessageDialog(null, "Time's Up!");
                            if (turn == 1) {
                                turn = 0;
                            } else if (turn == 0) {
                                turn = 1;
                            }
                        }
                        sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(hello.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };
        tr.start();
    }
}
